#pragma once

#include "command.h"

namespace glmock
{
	//
	// Container for an error that occured inside the mock framework. 
	struct DLL_EXPORT CommandError
	{
		char Command[50];
		char Error[512];
	};

	//
	// Exception thrown by the framework when one of the OpenGL functions are invoked
	// in an unexpected manner. Such as:
	//
	// 1. Wrong function was called
	// 2. Function that was called had the wrong types of parameters
	// 3. Not all functions specified was invoked
	//
	class DLL_EXPORT IValidationException
	{
	public:
		IValidationException(CommandError*& const errors, const unsigned int& count);
		virtual ~IValidationException() {}

	public:
		// Read-only property containing all the errors
		CommandError*& const Errors;

		// Read-only property containing how many errors where generated by the mock framework
		const unsigned int& Count;
	};

	//
	// Exception thrown if the mock engine isn't initialized properly when calling OpenGL functions
	class DLL_EXPORT MockEngineNotInitializedException
	{
	public:
		MockEngineNotInitializedException();
		~MockEngineNotInitializedException();
	};
}
